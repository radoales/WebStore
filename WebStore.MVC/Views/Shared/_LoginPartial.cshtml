@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject IOrderService orderService
@{ 
    var id = this.Context.Request.Cookies[CartKey];
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark list-galery-zoom" asp-controller="Users" asp-action="Details" asp-route-id="@UserManager.GetUserId(this.User)">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-controller="identity" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark list-galery-zoom">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark list-galery-zoom" asp-controller="Identity" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark list-galery-zoom" asp-controller="Identity" asp-action="Login">Login</a>
        </li>
    }
    <li class="nav-item">
        <a style="background-color:lightskyblue" asp-controller="Cart" asp-action="Index"  class="nav-link btn btn-link text-dark list-galery-zoom">Cart Items: @await orderService.GetCartItemsInCart(id)</a>
    </li>
</ul>
